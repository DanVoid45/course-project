command = functions.voice  # Получаем строку с голосовой командой
site = command.split()  # Разбиваем строку на слова

# Проверяем, есть ли запрос на воспроизведение музыки
if any(keyword in command.lower() for keyword in ["трек", "музыку", "музыка"]):
    track_name = " ".join(site[2:])  # Предполагаем, что название трека идет после команды
    search_url = f"https://music.yandex.ru/search?text={track_name}"  # Формируем URL для поиска трека на Яндекс Музыке
    functions.speak(f"Включаю трек: {track_name}")  # Сообщаем пользователю, что трек будет включен
    webbrowser.open_new_tab(search_url)  # Открываем новую вкладку с результатами поиска
    return  # Завершаем выполнение функции

# Проверяем, есть ли запрос на поиск в Google
if "сайт" in site or "страницу" in site:
    query = " ".join(site[2:])  # Предполагаем, что запрос идет после команды "найди"
    search_url = f"https://www.google.com/search?q={query}"  # Формируем URL для поиска в Google
    functions.speak("Выполняю поиск в Google")  # Сообщаем пользователю о начале поиска
    webbrowser.open_new_tab(search_url)  # Открываем новую вкладку с результатами поиска
    return  # Завершаем выполнение функции

open_tab = None  # Инициализируем переменную для хранения открываемой вкладки
for k, v in sites.items():  # Перебираем доступные сайты и их ключевые слова
    for i in v:
        # Приводим текущую команду к нижнему регистру для сравнения
        if i in command.lower():  
            functions.speak("Выполняю")  # Сообщаем пользователю, что команда будет выполнена
            open_tab = webbrowser.open_new_tab(k)  # Открываем новую вкладку с указанным сайтом
            break  # Выходим из внутреннего цикла, если сайт найден
    if open_tab is not None:  # Если вкладка была открыта
        break  # Выходим из внешнего цикла

# Пример использования
if __name__ == "__main__":
    browser()  # Запускаем функцию browser для выполнения команд
